grepl("Bras-local", "Bras")
grepl("Bras","Bras Local ")
grepl("Bras","Bras-Local ")
source('~/GitHub/CeramicIndustries/Scripts/Data1.R')
source('~/GitHub/CeramicIndustries/Scripts/Data1.R')
View(localRates)
View(longDistRates)
snames
for(x in (4:length(snames))){
longDistRates<- rbind(longDistRates, readWorkbook(wb, sheet=snames[x]))
}
x
for(x in (4:length(snames))){
longDistRates<- rbind(longDistRates, readWorkbook(wb, sheet=snames[x]))
}
snames[x]
snames[7]
rbind(longDistRates,readWorkbook(wb,sheet= sname[7]))
rbind(longDistRates,readWorkbook(wb,sheet= snames[7]))
rbind(longDistRates,readWorkbook(wb,sheet= snames[8]))
for(x in (4:length(snames))){
longDistRates<- rbind(longDistRates, readWorkbook(wb, sheet=snames[x]))
}
x
for(x in (4:length(snames))){
longDistRates<- rbind(longDistRates, readWorkbook(wb, sheet=snames[x]))
}
rm(list = ls())
wd<- path.expand("~/GitHub/CeramicIndustries/Data/")
library(openxlsx)
library(dplyr)
##********************************************Reading data from files *************************************************####
#Reading transact rates file
filename <- paste0(wd, "/Transact Rates Template - Ceramic Industries V7.xlsx")
wb <- loadWorkbook(filename)
localRates <- data.frame()
longDistRates <- data.frame()
snames<- c(getSheetNames(filename))
# local rates
for(n in 1:3){
localRates<- rbind(localRates, readWorkbook(wb, sheet=snames[n]))
}
localRates<-na.omit(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
#long distance rates
for(x in (4:length(snames))){
longDistRates<- rbind(longDistRates, readWorkbook(wb, sheet=snames[x]))
}
rm(list = ls())
wd<- path.expand("~/GitHub/CeramicIndustries/Data/")
library(openxlsx)
library(dplyr)
##********************************************Reading data from files *************************************************####
#Reading transact rates file
filename <- paste0(wd, "/Transact Rates Template - Ceramic Industries V7.xlsx")
wb <- loadWorkbook(filename)
localRates <- data.frame()
longDistRates <- data.frame()
snames<- c(getSheetNames(filename))
# local rates
for(n in 1:3){
localRates<- rbind(localRates, readWorkbook(wb, sheet=snames[n]))
}
localRates<-na.omit(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
#long distance rates
for(x in (4:length(snames))){
longDistRates<- rbind(longDistRates, readWorkbook(wb, sheet=snames[x]))
}
source('~/GitHub/CeramicIndustries/Scripts/Data1.R')
longDistRates<-na.omit(longDistRates)
longDistRates<-data.frame(longDistRates$Vendor.Name,longDistRates$Region.Code,longDistRates$`From.Location.(Site.codes)`,longDistRates$Rate,longDistRates$`Rate.Penalty.(Drop-off)`)
for(x in (4:length(snames))){
longDistRates<- rbind(longDistRates, readWorkbook(wb, sheet=snames[x]))
}
View(longDistRates)
longDistRates<-na.omit(longDistRates)
longDistRates<-data.frame(longDistRates$Vendor.Name,longDistRates$Region.Code,longDistRates$`From.Location.(Site.codes)`,longDistRates$Rate,longDistRates$`Rate.Penalty.(Drop-off)`)
filename1 <- paste0(wd, "/Copy of Ceramic Industries Plato Setup Nov '15 V3.xlsx")
wb1 <- loadWorkbook(filename1)
sites <- as.data.frame(readWorkbook(wb1,sheet = "Site"))
sites<- sites[ , !apply( sites , 2 , function(x) all(is.na(x)) ) ]
sites<- data.frame(SiteCode = sites$SiteCode,SiteClassCode = sites$SiteClassCode, Area = sites$Area, MPCode = sites$MapPointCode)
#sites map points
mapPoint = readWorkbook(wb1,sheet = "MapPoint")
#mapPoint<- mapPoint[,!apply(mapPoint,2,function(x) all(is.na(x)))]
mapPoint<-data.frame(MPCode = mapPoint$MPCode, X = mapPoint$X, Y = mapPoint$Y)
sites<- cbind(sites, mapPoint[match(sites$MPCode, mapPoint$MPCode),c("X",'Y')])
head(sites)
#plot sites
plot(Y ~ X , data = sites,asp = 1, pch = 16, cex = 0.5)
head(localRates)
#local
plantsLocal<- lapply(localRates$localRates..From.Location..Site.codes..,as.character)
lenLocal = nrow(localRates)
rowVectorLocal <- vector()
plantRowsLocal<- vector()
ratesdtLocal <- data.frame()
for(i in 1:lenLocal){
thePlants <- as.character(plantsLocal[i])
plantRows<- c(unlist(strsplit(thePlants, "/", fixed=TRUE)))
for(j in 1:length(plantRows)){
ratesCol<-cbind( as.character(localRates[i,1]),as.character( localRates[i,2]),plantRows[j], localRates[i,4],localRates[i,5],localRates[i,6] )
ratesdtLocal <-rbind(ratesdtLocal,ratesCol)
}
}
names(ratesdtLocal) <- c("Vendor", "Area", "SiteCode", "Rate(28 tonne)","Rate(34 tonnes)","Penalty")
plantCodesLocal <- unique(ratesdtLocal$V3)
ratesdtLocal$`Rate(28 tonne)`<-as.numeric(as.character(ratesdtLocal$`Rate(28 tonne)`))
ratesdtLocal$`Rate(34 tonnes)`<-as.numeric(as.character(ratesdtLocal$`Rate(34 tonnes)`))
#long distance
plantsLongDist<- lapply(longDistRates$longDistRates..From.Location..Site.codes..,as.character)
lenLongDist = nrow(longDistRates)
rowVectorLongDist <- vector()
plantRowsLongDist<- vector()
ratesdtLongDist <- data.frame()
for(i in 1:lenLongDist){
thePlants <- as.character(plantsLongDist[i])
plantRows<- c(unlist(strsplit(thePlants, "/", fixed=TRUE)))
for(j in 1:length(plantRows)){
ratesCol<-cbind( as.character(longDistRates[i,1]),as.character( longDistRates[i,2]),plantRows[j], longDistRates[i,4],longDistRates[i,5])
ratesdtLongDist <-rbind(ratesdtLongDist,ratesCol)
}
}
names(ratesdtLongDist) <- c("Vendor", "Area", "SiteCode", "Rate", "Penalty")
ratesdtLongDist$Rate<- as.numeric(as.character(ratesdtLongDist$Rate))
#mapPoint mean of each area
m<- sites %>% filter(!is.na(Area)) %>% group_by(Area) %>% summarise(mx = mean(X), my = mean(Y))
sites<- left_join(sites, m)
head(sites, 20)
segments(x0 = sites$X, x1 = sites$mx, y0 = sites$Y, y1 = sites$my)
#long distance cost per kilometer
ratesdtLongDist<- cbind(ratesdtLongDist, m[match(ratesdtLongDist$Area, m$Area),c("mx","my")])
ratesdtLongDist<- cbind(ratesdtLongDist, sites[match(ratesdtLongDist$SiteCode, sites$SiteCode), c("X","Y")])
ratesdtLongDist$dist<- 110 * sqrt((ratesdtLongDist$X - ratesdtLongDist$mx)^2 + (ratesdtLongDist$Y - ratesdtLongDist$my)^2)
ratesdtLongDist$cpk<- ratesdtLongDist$Rate / ratesdtLongDist$dist
ratesdtLocal<-cbind(ratesdtLocal,m[match(ratesdtLocal$Area,m$Area),c("mx","my")])
ratesdtLocal<-cbind(ratesdtLocal,sites[match(ratesdtLocal$SiteCode,sites$SiteCode),c("X","Y")])
ratesdtLocal$dist<-110 * sqrt((ratesdtLocal$X- ratesdtLocal$mx)^2 + (ratesdtLocal$Y - ratesdtLocal$my)^2)
ratesdtLocal$cpk28Tonne<- ratesdtLocal$`Rate(28 tonne)`/ratesdtLocal$dist
ratesdtLocal$cpk34Tonne<- ratesdtLocal$`Rate(34 tonnes)`/ratesdtLocal$dist
hist(ratesdtLongDist$Rate)
hist(ratesdtLongDist$cpk[ratesdtLongDist$cpk < 80])
abline(v = mean(ratesdtLongDist$cpk[ratesdtLongDist$cpk < 80],na.rm = T), col = 2)
dm<- 110*as.matrix(dist(sites[sites$SiteClassCode != "PLANT",c("X","Y")]))
head(dm)
hist(dm)
source('~/GitHub/CeramicIndustries/Scripts/Data1.R')
for(n in 1:3){
localRates<- rbind(localRates, readWorkbook(wb, sheet=snames[n]))
}
localRates<-na.omit(localRates)
View(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
localRates<-na.omit(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
View(localRates)
# local rates
for(n in 1:3){
localRates<- rbind(localRates, readWorkbook(wb, sheet=snames[n]))
}
localRates<-na.omit(localRates)
View(localRates)
for(n in 1:3){
localRates<- rbind(localRates, readWorkbook(wb, sheet=snames[n]))
}
localRates<-na.omit(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
rm(list = ls())
wd<- path.expand("~/GitHub/CeramicIndustries/Data/")
library(openxlsx)
library(dplyr)
##********************************************Reading data from files *************************************************####
#Reading transact rates file
filename <- paste0(wd, "/Transact Rates Template - Ceramic Industries V7.xlsx")
wb <- loadWorkbook(filename)
localRates <- data.frame()
longDistRates <- data.frame()
snames<- c(getSheetNames(filename))
for(n in 1:3){
localRates<- rbind(localRates, readWorkbook(wb, sheet=snames[n]))
}
localRates<-na.omit(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
View(localRates)
localRates<-na.omit(localRates)
View(localRates)
localRates<-localRates[ , !apply( localRates , 2 , function(x) all(is.na(x)) ) ]
View(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
localRates<- cbind(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
View(localRates)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
localRates<- data.frame(localRates$Vendor.Name,localRates$Region.Code,localRates$`From.Location.(Site.codes)`,localRates$Rate.28.tonne,localRates$Rate.34.tonne,localRates$`Rate.Penalty.(Drop-off)`)
source('~/GitHub/CeramicIndustries/Scripts/Data1.R')
setwd("~/GitHub/R-Assignments/Data")
wd<- path.expand("~/GitHub/R-Assignments/Data")
library(openxlsx)
library(dplyr)
library(tidyr)
#list of all files that need to be cleaned
file.list <- list.files()
df <-as.data.frame( read.table(paste0(wd,"/",file.list[1]),header=FALSE, sep=";"))
dates <- as.data.frame.array( df[1, ])
sales.info <- as.data.frame.array(df[2, ])
#Remove the first two rows: dates and sales information. Put sales info as the column names of df
df <- df[-(1:2), ]
#Creating a data frame  with product info and sales dates as column names
dates.product.info <- dates
dates.product.info[1:7] <- sales.info[1:7]
date.sales.spread <- df
names(date.sales.spread) <- dates.product.info
#Changing column names to the correct formart
#No spaces between the words in each product info column name
prod.info.df <- data.frame (SuppCd= date.sales.spread$`Supp. Cd.`,SupplierName=date.sales.spread$`Supplier Name`,
SubDepartment = date.sales.spread$`Sub-Department`,ProductCode = date.sales.spread$`Product Code`,
EAN = date.sales.spread$EAN,ProductDescription=date.sales.spread$`Product Description`,
Size = date.sales.spread$Size)
date.sales.df <- date.sales.spread[,8:ncol(date.sales.spread)]
date.sales.spread<- cbind(prod.info.df,date.sales.df)
#Keeping the date format from the original file
change.col.names <- colnames(date.sales.spread)
change.col.names[1:7] <- colnames(prod.info.df)
change.col.names[8:length(change.col.names)] <- dates.product.info[8:length(dates.product.info)]
#Changing the date column names to date.salesInfo
for(j in 8:length(change.col.names)){
#removing space and period
a <- gsub(" ","",sales.info[j])
b <- gsub("[.]","",a)
change.col.names[j] <- paste0(change.col.names[j],".",b)
}
names(date.sales.spread) <- change.col.names
gather.date.sales <- gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
gather.date.sales <- gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
View(dates)
gather.date.sales <- gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
a<-gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
gather.date.sales <- gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
View(date.sales.df)
View(date.sales.spread)
date.sales.spread %>% gather(Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
gather.date.sales <- gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
View(date.sales.spread)
colMeans(date.sales.spread)
colnames(date.sales.spread)
gather.date.sales <- gather(date.sales.spread,Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
gather.date.sales %>%  gather(Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
date.sales.spread %>%  gather(Date,-SuppCd,-SupplierName,-SubDepartment,-ProductCode,-EAN,-ProductDescription,-Size)
setwd("~/GitHub/R-Assignments/Data")
wd<- path.expand("~/GitHub/R-Assignments/Data")
library(openxlsx)
library(dplyr)
library(tidyr)
#list of all files that need to be cleaned
file.list <- list.files()
df <-as.data.frame( read.table(paste0(wd,"/",file.list[1]),header=FALSE, sep=";"))
dates <- as.data.frame.array( df[1, ])
sales.info <- as.data.frame.array(df[2, ])
#Remove the first two rows: dates and sales information. Put sales info as the column names of df
df <- df[-(1:2), ]
#Creating a data frame  with product info and sales dates as column names
dates.product.info <- dates
dates.product.info[1:7] <- sales.info[1:7]
date.sales.spread <- df
names(date.sales.spread) <- dates.product.info
View(date.sales.spread)
setwd("~/GitHub/R-Assignments/Data")
wd<- path.expand("~/GitHub/R-Assignments/Data")
library(openxlsx)
library(dplyr)
library(tidyr)
#list of all files that need to be cleaned
file.list <- list.files()
df <-as.data.frame( read.table(paste0(wd,"/",file.list[1]),header=FALSE, sep=";"))
dates <- as.data.frame.array( df[1, ])
sales.info <- as.data.frame.array(df[2, ])
for(i in seq_len(length(sales.info))){
}
#Remove the first two rows: dates and sales information. Put sales info as the column names of df
df <- df[-(1:2), ]
#Creating a data frame  with product info and sales dates as column names
dates.product.info <- dates
dates.product.info[1:7] <- sales.info[1:7]
date.sales.spread <- df
names(date.sales.spread) <- dates.product.info
View(date.sales.spread)
View(date.sales.spread)
View(date.sales.spread)
?apply
dates.product.info <- date.sales.spread[apply(dates.product.info,2,function(x)gsub(" ","",x) )]
dates.product.info <- date.sales.spread[apply(dates.product.info,1,function(x)gsub(" ","",x) )]
dates.product.info
ates.product.info <- dates
dates.product.info[1:7] <- sales.info[1:7]
View(date.sales.spread)
dates.product.info
setwd("~/GitHub/R-Assignments/Data")
wd<- path.expand("~/GitHub/R-Assignments/Data")
library(openxlsx)
library(dplyr)
library(tidyr)
#list of all files that need to be cleaned
file.list <- list.files()
df <-as.data.frame( read.table(paste0(wd,"/",file.list[1]),header=FALSE, sep=";"))
dates <- as.data.frame.array( df[1, ])
sales.info <- as.data.frame.array(df[2, ])
for(i in seq_len(length(sales.info))){
}
#Remove the first two rows: dates and sales information. Put sales info as the column names of df
df <- df[-(1:2), ]
#Creating a data frame  with product info and sales dates as column names
dates.product.info <- dates
dates.product.info[1:7] <- sales.info[1:7]
date.sales.spread <- df
names(date.sales.spread) <- dates.product.info
View(dates.product.info)
a<- dates.product.info[1:7]
View(a)
str(dates.product.info)
dim(dates.product.info)
dim(dates)
dim(df)
b<- a[apply(a,2,function(x)gsub(" ","",x))]
b<- a[apply(a,1,function(x)gsub(" ","",x))]
a[1,1]
a[1]
b<- a[apply(a,1,function(x) paste0("1",x)]
b<- a[apply(a,1,function(x) paste0("1",x))]
a
b<- a[apply(a,2,function(x) paste0("1",x))]
setwd("~/GitHub/R-Assignments/Data")
wd<- path.expand("~/GitHub/R-Assignments/Data")
library(openxlsx)
library(dplyr)
library(tidyr)
#list of all files that need to be cleaned
file.list <- list.files()
df <-as.data.frame( read.table(paste0(wd,"/",file.list[1]),header=FALSE, sep=";"))
dates <- as.data.frame( df[1, ])
sales.info <- as.data.frame(df[2, ])
#Remove the first two rows: dates and sales information. Put sales info as the column names of df
df <- df[-(1:2), ]
#Creating a data frame  with product info and sales dates as column names
dates.product.info <- dates
dates.product.info[1:7] <- sales.info[1:7]
date.sales.spread <- df
names(date.sales.spread) <- dates.product.info
setwd("~/GitHub/R-Assignments/Data")
wd<- path.expand("~/GitHub/R-Assignments/Data")
library(openxlsx)
library(dplyr)
library(tidyr)
#list of all files that need to be cleaned
file.list <- list.files()
df <-as.data.frame( read.table(paste0(wd,"/",file.list[1]),header=FALSE, sep=";"))
dates <- as.data.frame( df[1, ])
sales.info <- as.data.frame(df[2, ])
#Remove the first two rows: dates and sales information. Put sales info as the column names of df
df <- df[-(1:2), ]
#Creating a data frame  with product info and sales dates as column names
dates.product.info <- dates
dates.product.info[1:7] <- sales.info[1:7]
date.sales.spread <- df
names(date.sales.spread) <- dates.product.info
View(dates.product.info)
View(sales.info)
a<- dates.product.info[1:7]
a
b<- date.sales.spread[1,1:7]
b
c<- date.sales.spread[,1:7]
c
